name: CI
on:
  workflow_call:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build: #A job called "build"
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
          #os: [ windows, macos, ubuntu ]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-build-${{ matrix.os }}
      cancel-in-progress: true
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: | # optional # sub-project/*.gradle*  # sub-project/**/gradle-wrapper.properties
            *.gradle*
            **/gradle-wrapper.properties
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.4 
          add-job-summary-as-pr-comment: on-failure 
      - run: gradle build --dry-run # Test build configuration

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build/libs

  # success:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - build
  #   if: >-
  #     always() && (
  #       contains(join(needs.*.result, ','), 'failure')
  #       || !contains(join(needs.*.result, ','), 'cancelled')
  #     )
  #   steps:
  #     - name: Verify that there were no failures
  #       run: ${{ !contains(join(needs.*.result, ','), 'failure') }}

# run test only on repository 
# ./gradlew test --tests repository.StatisticMongoTest