name: deploy
on:
  workflow_call:
  push:
    #branches: [ "main" ]
    branches: [ "feature/GHA" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
    deploy-attempt:
        #if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        runs-on: ubuntu-22.04
        #needs: test
        permissions: write-all
        strategy:
          fail-fast: false
          matrix:
            # os: [ windows, macos, ubuntu ]
            node-version: [18.x] 
        steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Set project name 
          run: echo "REPOSITORY_NAME=middleware-maraffa" >> $GITHUB_ENV # unused at the moment
        - name: Set build version
          run: echo "BUILD_VERSION=1.0.0" >> $GITHUB_ENV
        - name: lowercase github.repository
          run: |
                echo "IMAGE_NAME=`echo ${{github.repository_owner}}/${{ env.REPOSITORY_NAME }} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
          if: ${{ github.ref }} == 'refs/heads/main'
        - name: Extract tag name # Impllcit constraint the tag can be done only from release in main branch
          run: echo "TAG_NAME=${{ github.event.release.tag_name }}"
        - name: Set version with latest  
          run: echo "VERSION=latest" >> $GITHUB_ENV
          if: ${{ github.ref }} != 'refs/heads/main'
        - name: Set version with Develop
          run: echo "VERSION=develop" >> $GITHUB_ENV
        - name: Use cache 
          uses: actions/cache@v2
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
        - run: ls 
        - name: 'Login to GitHub Container Registry'
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{github.actor}}
            password: ${{secrets.GITHUB_TOKEN}}
        - name: Build Docker image
          run: docker build -t ghcr.io/${{ env.IMAGE_NAME}}:${{ env.VERSION }}  .
        - name: Push Docker image
          run: docker push ghcr.io/${{ env.IMAGE_NAME}}:${{ env.VERSION }} 